@model DiplomaDataModel.Choice

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h2>Create</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>@ViewBag.yearTermName</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @* Hidden field to store the YearTermID that SHOULD NOT be set by the user *@
                @Html.Hidden("YearTermID", (int)ViewBag.yearTermID)
                @Html.ValidationMessageFor(model => model.YearTermID, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @if (User.IsInRole("Admin"))
                        {
                            @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name } })
                        }
                        else if (User.IsInRole("Student"))
                        {
                            @Html.Hidden("StudentID", User.Identity.Name)
                            @Html.Label("StudentID", User.Identity.Name, new { @class = "form-control-static" })
                        }
                        @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentFirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StudentFirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StudentFirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentLastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StudentLastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StudentLastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstChoiceOptionId, null, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("FirstChoiceOptionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FirstChoiceOptionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SecondChoiceOptionId, null, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("SecondChoiceOptionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SecondChoiceOptionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ThirdChoiceOptionId, null, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("ThirdChoiceOptionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ThirdChoiceOptionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FourthChoiceOptionId, null, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("FourthChoiceOptionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FourthChoiceOptionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        @if (User.IsInRole("Admin"))
        {
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        }
    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
