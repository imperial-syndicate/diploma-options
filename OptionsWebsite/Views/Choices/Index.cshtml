@model IEnumerable<DiplomaDataModel.Choice>

@{
    ViewBag.Title = "All Choices";
}

<h2>All Choices</h2>


                      <div>
                          @Html.DropDownList("YearTermSelects", null, htmlAttributes: new { @class = "form-control" })
                          @Html.DropDownList("TypeReportSelects", null, htmlAttributes: new { @class = "form-control" })
                      </div>

<script>

    $('#YearTermSelects').change(function (data) {
        var c = $('#YearTermSelects').find(":selected").val();
        var report_type = $('#TypeReportSelects').find(":selected").val();
        console.log(report_type);
        if (report_type == "details") {
            getReports(c);
        } else if (report_type == "chart") {
            getChoice(1, c);
            getChoice(2, c);
            getChoice(3, c);
            getChoice(4, c);
        }
    });

    $('#TypeReportSelects').change(function (data) {
        var report_type = $('#TypeReportSelects').find(":selected").val();
        var details = document.getElementById("filter-choices");
        var charts = document.getElementsByClassName("charts");


        if (report_type == "details") {
            $(".charts").toggleClass("hide");
            $("#filter-choices").removeClass("hide");
        } else if (report_type == "chart") {
            $(".charts").toggleClass("hide");
            $("#filter-choices").addClass("hide");

        }
        
    });

    var potato;
    var students = [];
    var student_count = 0;
    var defaultyear = $('#YearTermSelects').find(":selected").val();
    var currentyearterm = "";


    var getReports = function (yearterm) {
        $.support.cors = true;
        $.ajax({
            url: "http://localhost:12853/api/choices/" + yearterm,
            type: "GET",
            success: function (data) {
                students = data;
                console.log(data);
                displayStudents();
            }
        });
    }

    var displayStudents = function () {
        student_count = 0;
        for (var key in students) 
            student_count++;
        
        WriteResponse(students, "#filter-choices")
    }
    window.location.href
    function WriteResponse(people, target) {
        currentyearterm = $('#YearTermSelects').find(":selected").text();
        var allstudents = people;
        var strResult = "<table class='ui-state-highlight table'><tr><th>YearTerm</th><th>StudentID</th><th>First Name</th><th>Last Name</th><th>First Choice</th><th>Second Choice</th><th>Third Choice</th><th>Fourth Choice</th><th>Selection Date</th><th></th></tr>";
        for (j = 0; j < student_count; j++) {
            console.log(students['student' + j]);
            strResult += "<tr>\n";
            strResult += "<td>" + currentyearterm + "</td><td>" + students['student' + j][1] + "</td><td>"
                                + students['student' + j][2] + "</td><td>" + students['student' + j][3] + "</td>";
            strResult += "<td>" + students['student' + j][4] + "</td><td>" + students['student' + j][5] + "</td><td>"
                                + students['student' + j][6] + "</td><td>" + students['student' + j][7] + "</td><td>" + students['student' + j][8] + "</td>\n";

            strResult += "<td><a href='" + window.location.href + "/Edit/" + students['student' + j][9] + "'>Edit</a></td><td> | </td>";
            strResult += "<td><a href='" + window.location.href + "/Details/" + students['student' + j][9] + "'>Details</a></td><td> | </td>";
            strResult += "<td><a href='" + window.location.href + "/Delete/" + students['student' + j][9] + "'>Delete</a></td>";
            strResult += "</tr>\n";
        }            
        strResult += "</table>\n";
        $(target).html(strResult);
    }



    $(function () {
        $.support.cors = true;
        $.ajax({
            url: "http://localhost:12853/api/choices",
            type: "GET",
            success: function (data) {
                potato = data;
                getChoice(1, defaultyear);
                getChoice(2, defaultyear);
                getChoice(3, defaultyear);
                getChoice(4, defaultyear);
                getReports(defaultyear);
            }
        });
    });

    var getChoice = function (choicenum, yearterm) {
        currentyearterm = $('#YearTermSelects').find(":selected").text();

        var array = [];
        var div_tag = "";
        var title = "";
        if (choicenum == 1) {
            array = potato[yearterm]["Choice1"];
            div_tag = "#first-choice";
            title = "First Choice";
        } else if (choicenum == 2) {
            array = potato[yearterm]["Choice2"];
            div_tag = "#second-choice";
            title = "Second Choice";
        } else if (choicenum == 3) {
            array = potato[yearterm]["Choice3"];
            div_tag = "#third-choice";
            title = "Third Choice";
        } else if (choicenum == 4) {
            array = potato[yearterm]["Choice4"];
            div_tag = "#fourth-choice";
            title = "Fourth Choice";
        }

        var options = potato["Options"]
        console.log(options);

        var series = [],
            len = array.length,
            i = 0;
        for (i; i < len; i++) {
            series.push({
                name: options[i],
                y: array[i]
            });
        }

        $.each(potato, function (key, value) {
            console.log(key + ": " + value);
            $.each(potato[key], function (key2, value2) {
                console.log(key2 + ": " + value2);
            })
        });
        $(div_tag).highcharts({
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: title + ' Breakdown for ' + currentyearterm
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        }
                    }
                }
            },
            series: [{
                name: 'Options',
                colorByPoint: true,
                data: series
            }
            ]
        });
    }



</script>
                      <p>
                          @Html.ActionLink("Create New", "Create")
                      </p>
<div id="filter-choices"></div>

     <div class="container">
           <div class="row">
               <div class="col-sm-6 charts hide" id="first-choice"  style="min-width: 300px; height: 400px; max-width: 600px; margin: auto auto"></div>
               <div class="col-sm-6 charts hide" id="second-choice" style="min-width: 300px; height: 400px; max-width: 600px; margin: auto auto"></div>
               <div class="col-sm-6 charts hide" id="third-choice"  style="min-width: 300px; height: 400px; max-width: 600px; margin: auto auto"></div>
               <div class="col-sm-6 charts hide" id="fourth-choice" style="min-width: 300px; height: 400px; max-width: 600px; margin: auto auto"></div>
           </div>                     
    </div>






<!--<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.YearTerm.YearTermID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentLastName)
        </th>
        <th>
            First Choice
        </th>
        <th>
            Second Choice
        </th>
        <th>
            Third Choice
        </th>
        <th>
            Fourth Choice
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectionDate)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @switch (item.YearTerm.Term)
            {
                case 10:
                    @("Winter");
                        break;
                case 20:
                    @("Spring/Summer");
                        break;
                case 30:
                    @("Fall");
                    break;
            }
            @(item.YearTerm.Year)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentFirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentLastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SecondOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThirdOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FourthOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SelectionDate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ChoiceID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ChoiceID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ChoiceID })
        </td>
    </tr>
}

</table>
-->