@model Microsoft.AspNet.Identity.EntityFramework.IdentityUser
@{
    ViewBag.Title = "Edit";
}
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h2>Edit</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>User</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p class="form-control-static">@(Model.UserName)</p>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p class="form-control-static">@(Model.Email)</p>
                    </div>
                </div>
                <div class="form-group">
                    <label for="LockoutEnabled" class="control-label col-md-4">Enabled</label>
                    <div class="col-md-8">
                        <div class="checkbox">
                        @Html.EditorFor(model => model.LockoutEnabled)
                        @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
